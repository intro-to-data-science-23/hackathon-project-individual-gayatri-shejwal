print(univar_plot)
# Display the histogram
ggplotly(univar_plot)
library(plotly)
univar_plot <- ggplot(airbnb_data, aes(x = neighbourhood_group, fill = neighbourhood)) +
geom_bar(stat = "count", fill = "lightpink", color = "black", alpha = 0.7) +
labs(title = "Univariate Distribution of Airbnbs by Neighbourhood Group",
x = "Neighbourhood Group",
y = "Number of Airbnbs") +
theme_minimal()
# Display the histogram
ggplotly(univar_plot)
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(availability_365, reviews_per_month))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month))
View(reg)
install.packages("broom")
library(broom)
augment(reg[[4]], se_fit = TRUE)
augment(reg[[5]], se_fit = TRUE)
augment(reg, se_fit = TRUE)
View(airbnb_data_new)
augment(reg$fitted.values, se_fit = TRUE)
reg[[5]]
head(reg[[5]])
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month))
head(reg[[5]])
reg
reg[[1]]
reg[[2]]
head(reg[[2]])
exp(predict(reg))
View(univar_plot)
View(airbnb_data)
View(airbnb_data)
qplot(reviews_per_month, log_price, data = airbnb_data_new, geom = "point")
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = reg[[5]]), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
predicted_log_price <- as.data.frame(reg[[5]])
View(predicted_log_price)
airbnb_data_new <- airbnb_data_new |> mutate(predicted_log_price = predicted_log_price)
airbnb_data_new <- airbnb_data_new |> mutate(predicted_log_price = predicted_log_price) |>
!is.na(log_price, availability_365, reviews_per_month, minimum_nights)
airbnb_data_new <- airbnb_data_new |> mutate(predicted_log_price = predicted_log_price) |>
na.exclude(log_price, availability_365, reviews_per_month, minimum_nights)
airbnb_data_new <- airbnb_data_new |> na.exclude(log_price, availability_365, reviews_per_month, minimum_nights) |>
mutate(predicted_log_price = predicted_log_price) |>
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = reg[[5]]), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
airbnb_data_new <- airbnb_data_new |> na.exclude(log_price, availability_365, reviews_per_month, minimum_nights)
unique(airbnb_data_new$minimum_nights)
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
airbnb_data_new <- airbnb_data_new |> filter(!is.na(log_price, availability_365, reviews_per_month, minimum_nights))
airbnb_data_new <- airbnb_data_new |>
filter(!is.na(log_price)) |>
filter(!is.na(availability_365)) |>
filter(!is.na(reviews_per_month)) |>
filter(!is.na(minimum_nights))
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
View(reg)
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month, minimum_nights))
#augment(reg, se_fit = TRUE)
ggplot(airbnb_data_new, aes(x = head(reg[[5]])))
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month, minimum_nights))
#augment(reg, se_fit = TRUE)
#ggplot(airbnb_data_new, aes(x = head(reg[[5]])))
predicted_log_price <- as.data.frame(reg[[5]])
#airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
#                   filter(!is.na(reviews_per_month)) |>
#                            filter(!is.na(minimum_nights))
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
#                   filter(!is.na(reviews_per_month)) |>
filter(!is.na(minimum_nights))
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
View(predicted_log_price)
View(airbnb_data_new)
airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
#                   filter(!is.na(reviews_per_month)) |>
filter(is.na(minimum_nights))
!
airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
#                   filter(!is.na(reviews_per_month)) |>
filter(!is.na(minimum_nights))
airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
#                   filter(!is.na(reviews_per_month)) |>
filter(!is.na(minimum_nights))
View(airbnb_data_new)
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month, minimum_nights))
predicted_log_price <- as.data.frame(reg[[5]])
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
airbnb_data_new <- airbnb_data_new |>
#  filter(!is.na(log_price)) |>
#          filter(!is.na(availability_365)) |>
filter(!is.na(reviews_per_month))
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
predicted_log_price <- as.data.frame(reg[[5]])
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month, minimum_nights))
airbnb_data_new <- airbnb_data |> mutate(log_price = log(price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new, na.exclude(log_price, availability_365, reviews_per_month, minimum_nights))
View(reg)
predicted_log_price <- as.data.frame(reg[[5]])
View(predicted_log_price)
predicted_log_price <- as.data.frame(reg[[1]])
View(predicted_log_price)
predicted_log_price <- as.data.frame(reg[[3]])
predicted_log_price <- as.data.frame(reg[[5]])
unique(airbnb_data_new$log_price)
sum(is.na(airbnb_data_new$price))
sum(is.na(airbnb_data_new$minimum_nights))
sum(is.na(airbnb_data_new$availability_365))
sum(is.na(airbnb_data_new$reviews_per_month))
unique(airbnb_data_new$room_type)
View(predicted_log_price)
airbnb_data_new <- airbnb_data |>
mutate(log_price = log(price)) |>
filter(!is.na(reviews_per_month))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
airbnb_data_new <- airbnb_data |>
mutate(log_price = log(price)) |>
filter(!is.na(reviews_per_month))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
airbnb_data_new$reviews_per_month[is.na(airbnb_data_new$reviews_per_month) | airbnb_data_new$reviews_per_month=="Inf"] = NA
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
airbnb_data_new <- airbnb_data |>
mutate(log_price = log(price)) |>
filter(!is.na(reviews_per_month))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
sum(is.infinite(airbnb_data_new$reviews_per_month))
sum(is.infinite(airbnb_data_new$minimum_nights))
sum(is.infinite(airbnb_data_new$availability_365))
sum(is.infinite(airbnb_data_new$log_price))
airbnb_data_new <- airbnb_data |>
mutate(log_price = log(price)) |>
filter(!is.na(reviews_per_month)) |>
filter(!is.infinite(log_price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
predicted_log_price <- as.data.frame(reg[[5]])
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = predicted_log_price)
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = as.factor(log_price)), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = as.factor(predicted_log_price)), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = as.factor(reviews_per_month))) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = as.numeric(log_price)), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = as.numeric(predicted_log_price)), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
qplot(reviews_per_month, log_price, data = airbnb_data_new, geom = "point")
qplot(longitude, log_price, data = airbnb_data_new, geom = "point") + geom_smooth(method = "lm")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price, fill = predicted_log_price)) +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price, fill = predicted_log_price)) + scale_x_discrete() + scale_y_discrete()
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price, fill = predicted_log_price)) + scale_x_discrete() + scale_y_discrete() +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price, fill = predicted_log_price)) + scale_x_continuous() + scale_y_continuous() +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = as.numeric(log_price), y = as.numeric(predicted_log_price), fill = predicted_log_price)) +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = as.numeric(log_price), y = as.numeric(predicted_log_price))) +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = as.numeric(log_price), y = as.numeric(predicted_log_price))) +
geom_line(fill = "blue")
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = as.numeric(predicted_log_price))
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = as.numeric(unlist(predicted_log_price)))
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_line(fill = "blue")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_curve(fill = "blue")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_point(fill = "blue")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_point(fill = "blue", color = "pink")
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 1) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 1) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = reviews_per_month)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "blue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.5) +
geom_line(aes(y = predicted_log_price), color = "pink", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.5) +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = neighbourhood)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.5) +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_point(fill = "blue", color = "pink")
plot_compare <- ggplot(airbnb_data_new, aes(x = neighbourhood)) +
geom_point(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.5) +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare <- ggplot(airbnb_data_new, aes(x = neighbourhood)) +
geom_point(aes(y = log_price), color = "lightblue") +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
plot_compare <- ggplot(airbnb_data_new, aes(x = id)) +
geom_point(aes(y = log_price), color = "lightblue") +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
plot_compare <- ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue") +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
geom_point(aes(y = predicted_log_price), color = "pink") + geom_smooth() +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare <- ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue") + geom_smooth() +
geom_point(aes(y = predicted_log_price), color = "pink") + geom_smooth() +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
plot_compare <- ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue") +
geom_point(aes(y = predicted_log_price), color = "pink") + geom_smooth() +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
plot_compare <- ggplot(airbnb_data_new, aes(x = neighbourhood)) +
geom_point(aes(y = log_price), color = "lightblue") + geom_smooth() +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
plot_compare <- ggplot(airbnb_data_new, aes(x = neighbourhood)) +
geom_point(aes(y = log_price), color = "lightblue") +
geom_line(aes(y = predicted_log_price), color = "black", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
plot_compare
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "red", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkgreen", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_line(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "X-axis", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_bar(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id)) +
geom_bar(aes(y = log_price), color = "lightblue") +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of reviews)) +
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", linetype = "solid", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(x, y = NULL, legend, fill = NULL, col = par("col"),
border = "black") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(x, y = NULL, legend, fill = NULL, col = par("col"),
border = "black") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(x, y = NULL, border = "black") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(x, y = NULL, legend = ("right") border = "black") +
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(x, y = NULL, legend = ("right"), border = "black") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
legend(log_price, predicted_log_price, legend = ("right"), border = "black") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Multiple Lines Plot", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = as.numeric(unlist(predicted_log_price))) |> mutate(predicted_price = exp(predicted_log_price))
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
airbnb_data_new <- airbnb_data |>
mutate(log_price = log(price)) |>
filter(!is.na(reviews_per_month)) |>
filter(!is.infinite(log_price))
reg <- lm(log_price ~ availability_365 + reviews_per_month + minimum_nights, data = airbnb_data_new)
predicted_log_price <- as.data.frame(reg[[5]])
airbnb_data_new <- airbnb_data_new |>
mutate(predicted_log_price = as.numeric(unlist(predicted_log_price))) ##|> mutate(predicted_price = exp(predicted_log_price))
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = reviwes_per_month, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = reviews_per_month, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = price, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price)) +
geom_point(fill = "blue", color = "pink")
ggplot(airbnb_data_new, aes(x = log_price, y = predicted_log_price, fill = minimum_nights)) +
geom_point(fill = "blue", color = "pink")
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual prices and ", x = "Number of Reviews", y = "Y-axis") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_line(aes(y = predicted_log_price), color = "darkred", linetype = "dashed", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (log terms)") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (log terms)") +
theme_minimal()
qplot(longitude, log_price, data = airbnb_data_new, geom = "point") + geom_smooth(method = "lm")
qplot(number_of_reviews, log_price, data = airbnb_data_new, geom = "point") + geom_smooth(method = "lm")
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (log terms)") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (in log terms)") +
theme_minimal()
ggplot(airbnb_data_new, aes(x = id, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (in log terms)") +
theme_minimal()
number_of_reviews
ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (in log terms)") +
theme_minimal()
set.seed(123)  # Set seed for reproducibility
subsample <- sample_n(airbnb_data, 100)
# Create a leaflet map
map <- leaflet(subsample) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~paste("Listing ID: ", id))
# Display the map
print(map)
subsample <- sample_n(airbnb_data_new, 100)
# Create a leaflet map
map <- leaflet(subsample) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~paste("Listing ID: ", id))
# Display the map
print(map)
set.seed(123)  # Set seed for reproducibility
subsample <- sample_n(airbnb_data, 100)
# Create a leaflet map
map <- leaflet(subsample) %>%
addTiles() %>%
addMarkers(~longitude, ~latitude, popup = ~paste("Listing ID: ", id))
# Display the map
print(map)
airbnb_dashboard <- flex_dashboard(vertical_layout = "fill",
columns = c(column(width = 4, "### Plot (a)", column(width = 4, "### Plots (b) and (c)", column(width = 4, "### Plot (d)")))))
View(airbnb_dashboard)
set.seed(123)  # Set seed for reproducibility
map_sample <- sample_n(airbnb_data, 100)
# Create a leaflet map
airbnb_map <- leaflet(map_sample) |>
addTiles() |>
addMarkers(~longitude, ~latitude, popup = ~paste("Airbnb ID: ", id))
# Display the map
airbnb_map
---
title: "Assignment 5 - Reporting and communication"
---
title: "Assignment 5 - Reporting and communication"
ggplotly(compare_plot)
compare_plot <- ggplot(airbnb_data_new, aes(x = number_of_reviews, fill = minimum_nights)) +
geom_point(aes(y = log_price), color = "lightblue", size = 0.4) +
geom_point(aes(y = predicted_log_price), color = "darkred", size = 0.4) +
labs(title = "Plot comparing actual vs. predicted prices", x = "Number of Reviews", y = "Prices (in log terms)") +
theme_minimal()
ggplotly(compare_plot)
